@model LoginViewModel
@{
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SB Admin 2 - Login</title>

    <!-- Custom fonts for this template-->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="css/sb-admin-2.min.css" rel="stylesheet">

</head>

<body class="bg-gradient-primary">

    <div class="container">


        <div class="row justify-content-center">

            <div class=" col-6">
               
                <div class="card o-hidden border-0 shadow-lg my-5">


                    <div class="p-5">
                        <div class="text-center">
                            <h1 class="h4 text-gray-900 mb-4"><b>Welcome To C&C System!</b></h1>
                        </div>
                        @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "user" }))
                        {


                            <div class="form-group">
                                <i class="fa fa-envelope prefix grey-text"></i>
                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control form-control-user", @placeholder = "Enter Email Address...", @type = "email" })
                            </div>

                            <div class="form-group">
                                <i class="fa fa-lock prefix grey-text"></i>
                                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                                @Html.PasswordFor(x => x.Password, new { @class = "form-control form-control-user", @placeholder = "Password" })
                            </div>

                            <div class="form-group">
                                <div class="custom-control custom-checkbox small">
                                    @Html.CheckBoxFor(x => x.IsPersistent, new { @class = "custom-control-input" })
                                    @Html.LabelFor(x => x.IsPersistent, new { @class = "custom-control-label font-weight-bold" })
                                </div>
                            </div>
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary btn-user ">Login</button>

                            </div>


                            <hr>
                            @if (ViewData["Error"].Equals(true))
                            {
                                <p class="text-danger">@ViewData["Message"]</p>
                            }

                        }

                    </div>



                </div>

            </div>

        </div>

    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>

</body>

</html>
